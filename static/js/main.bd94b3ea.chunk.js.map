{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-operations.js","components/ContactList/ContactList.js","components/ContactsForm/ContactsForm.js","components/Filter/Filter.js","App.js","index.js","components/ContactsForm/ContactsForm.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","id","name","number","_","payload","state","filter","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","axios","defaults","baseURL","visibleContacts","allContacts","normalizedFilter","toLowerCase","includes","connect","dispatch","fetchContacts","get","then","data","catch","error","onDeleteContact","delete","deleteContact","className","s","TaskList","map","TaskList_item","TaskList_button","onClick","onAddContact","post","addContact","useState","setName","setNumber","useSelector","nameId","uuidv4","numberId","handleInputChange","e","target","value","onSubmit","preventDefault","contact","searchName","alert","TaskEditor","TaskEditor_label","TaskEditor_input","type","pattern","title","required","onChange","TaskEditor_button","onChangeFilter","event","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd94b3ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"ContactList_TaskList__Cf-7W\",\"TaskList_item\":\"ContactList_TaskList_item__YuNTi\",\"TaskList_button\":\"ContactList_TaskList_button__3Fwnr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor_input\":\"Filter_TaskEditor_input__6pNn2\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactsRequest = createAction('contact/ContactsRequest');\r\nconst fetchContactsSuccess = createAction('contact/ContactsSuccess');\r\nconst fetchContactsError = createAction('contact/ContactsError');\r\n\r\nconst addContactRequest = createAction('contact/addContactRequest');\r\nconst addContactSuccess = createAction('contact/addContactSuccess');\r\nconst addContactError = createAction('contact/addContactError');\r\n\r\nconst deleteContactRequest = createAction('contact/deleteContactRequest');\r\nconst deleteContactSuccess = createAction('contact/deleteContactSuccess');\r\nconst deleteContactError = createAction('contact/deleteContactError');\r\n\r\nconst changeFilter = createAction('contact/filter');\r\n\r\nexport {\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    changeFilter,\r\n};","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from './contacts-actions';\r\n\r\n\r\nconst contacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst items = createReducer(contacts, {\r\n  [fetchContactsSuccess]: (_, {payload})=> payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  \r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n})","import { configureStore, getDefaultMiddleware, combineReducers } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\n\r\n\r\nconst middleware = [...getDefaultMiddleware(\r\n    {\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n    logger\r\n];\r\n\r\nconst contactPersistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: persistReducer(contactPersistConfig, contactsReducer)\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { persistor, store };","import axios from 'axios';\r\nimport {\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n    addContactError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    deleteContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'https://6196b1abaf46280017e7e242.mockapi.io';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n    dispatch(fetchContactsRequest())\r\n    axios\r\n        .get('/contacts')\r\n        .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n        .catch(error => dispatch(fetchContactsError(error)))\r\n}\r\n\r\nconst addContact = ({ name, number }) => dispatch => {\r\n    dispatch(addContactRequest());\r\n    axios\r\n        .post('/contacts', ({ name, number }))\r\n        .then(({ data }) => dispatch(addContactSuccess(data)))\r\n        .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n    axios\r\n        .delete(`/contacts/${id}`)\r\n        .then(() => dispatch(deleteContactSuccess(id)))\r\n        .catch(error => dispatch(deleteContactError(error)))\r\n};\r\n\r\n\r\nexport { addContact, deleteContact, fetchContacts };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact, fetchContacts } from '../../redux/contacts/contacts-operations';\r\nimport s from './ContactList.module.css';\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n\r\n  return (\r\n    <ul className={s.TaskList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.TaskList_item}>\r\n          {name} : {number}\r\n          <button\r\n            className={s.TaskList_button}\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  onDeleteContact: PropTypes.func,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n};\r\n\r\nconst visibleContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(({name}) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({contacts: {items, filter}}) => ({\r\n  contacts: visibleContacts(items, filter)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: ()=>dispatch(fetchContacts()),\r\n  onDeleteContact: id => dispatch(deleteContact(id)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { addContact } from '../../redux/contacts/contacts-operations';\r\nimport s from './ContactsForm.module.css';\r\n\r\nfunction ContactsForm({ onAddContact }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');  \r\n  const { contacts } = useSelector(state => state);\r\n\r\n  const nameId = uuidv4();\r\n  const numberId = uuidv4();\r\n\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const searchName = name =>\r\n      contacts.items.map(contact => contact.name).includes(name);\r\n    \r\n    if (searchName(name)) {\r\n      return alert(`${name} is already in contacts`);\r\n    } else {\r\n      onAddContact({ name, number });\r\n    }\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.TaskEditor}>\r\n      <label id={nameId} className={s.TaskEditor_label}>\r\n        <input\r\n          className={s.TaskEditor_input}\r\n          id={nameId}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв,\r\n            апострофа, тире и пробелов.\r\n            Например Adrian, Jacob Mercer,\r\n            Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleInputChange}\r\n        />\r\n      </label>\r\n      <label id={numberId} className={s.TaskEditor_label}>\r\n        <input\r\n          className={s.TaskEditor_input}\r\n          id={numberId}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handleInputChange}\r\n        />\r\n      </label>\r\n      <button className={s.TaskEditor_button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactsForm.propTypes = {\r\n  onAddContact: PropTypes.func,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAddContact: ({name, number}) => dispatch(addContact({name, number})),\r\n  }\r\n};\r\n\r\n  export default connect(null, mapDispatchToProps)(ContactsForm);\r\n","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div>\r\n      <h3>Find contacts by name</h3>\r\n      <input\r\n        className={s.TaskEditor_input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChangeFilter}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onchangeFilter: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChangeFilter: (event) => dispatch(changeFilter(event.target.value)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)","import './App.css';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport ContactsForm from './components/ContactsForm/ContactsForm';\r\nimport Filter from './components/Filter/Filter';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Phonebook</h1>\r\n      <ContactsForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport {persistor, store} from './redux/store';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={'please wait'} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"ContactsForm_TaskEditor__2iMiv\",\"TaskEditor_label\":\"ContactsForm_TaskEditor_label__1BveE\",\"TaskEditor_input\":\"ContactsForm_TaskEditor_input__2EIIq\",\"TaskEditorinput\":\"ContactsForm_TaskEditorinput__36bnX\",\"TaskEditor_button\":\"ContactsForm_TaskEditor_button__1HIGF\"};"],"sourceRoot":""}