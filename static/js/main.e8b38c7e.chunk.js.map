{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/ContactList/ContactList.js","components/ContactsForm/ContactsForm.js","components/Filter/Filter.js","App.js","index.js","components/ContactsForm/ContactsForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","items","createReducer","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","visibleContacts","allContacts","normalizedFilter","toLowerCase","includes","connect","dispatch","onDeleteContact","className","s","TaskList","map","TaskList_item","TaskList_button","onClick","onAddContact","useState","setName","setNumber","useSelector","nameId","numberId","handleInputChange","e","target","value","onSubmit","preventDefault","contact","searchName","alert","TaskEditor","TaskEditor_label","TaskEditor_input","type","pattern","title","required","onChange","TaskEditor_button","onChangeFilter","event","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,SAAW,8BAA8B,cAAgB,mCAAmC,gBAAkB,uC,mBCAhID,EAAOC,QAAU,CAAC,iBAAmB,mC,qNCE/BC,EAAaC,YAAa,eAAe,gBAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,OAAR,MAAqB,CAChEC,QAAS,CACLC,GAAIC,cACJJ,OACAC,cAGFI,EAAgBN,YAAa,kBAC7BO,EAAeP,YAAa,kBCC5BQ,EAAQC,YAPG,CACf,CAAEL,GAAI,OAAQH,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEE,GAAI,OAAQH,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEE,GAAI,OAAQH,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEE,GAAI,OAAQH,KAAM,iBAAkBC,OAAQ,eAGrB,mBACxBH,GAAa,SAACW,EAAD,OAAUP,EAAV,EAAUA,QAAV,4BAA4BO,GAA5B,CAAmCP,OADxB,cAExBG,GAAgB,SAACI,EAAD,OAAUP,EAAV,EAAUA,QAAV,OACfO,EAAMC,QAAO,qBAAGP,KAAgBD,QAHT,IAMrBQ,EAASF,YAAc,GAAD,eACzBF,GAAe,SAACK,EAAD,YAAMT,YAGTU,cAAgB,CAC7BL,QACAG,WCRIG,EAAU,sBAAOC,YACnB,CACIC,kBAAmB,CACfC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHtD,CAMZC,MAGEC,EAAuB,CACzBC,IAAK,OACLC,YACAC,UAAW,CAAC,WAGVC,EAAQC,YAAe,CACzBC,QAAS,CACLC,SAAUC,YAAeR,EAAsBS,IAEnDpB,aACAqB,UAAUC,IAGRC,EAAYC,YAAaT,G,sCCJ/B,IAAMU,EAAkB,SAACC,EAAa7B,GACpC,IAAM8B,EAAmB9B,EAAO+B,cAEhC,OAAOF,EAAY7B,QAAO,qBAAEV,KACrByC,cAAcC,SAASF,OAYjBG,eARS,SAAC,GAAD,QAAEZ,SAAWxB,EAAb,EAAaA,MAAOG,EAApB,EAAoBA,OAApB,MAAkC,CACxDqB,SAAUO,EAAgB/B,EAAOG,OAGR,SAAAkC,GAAQ,MAAK,CACtCC,gBAAiB,SAAA1C,GAAE,OAAIyC,EAASvC,EAAcF,QAGjCwC,EA9Cf,YAAqD,IAA9BZ,EAA6B,EAA7BA,SAAUc,EAAmB,EAAnBA,gBAE/B,OACE,oBAAIC,UAAWC,IAAEC,SAAjB,SACGjB,EAASkB,KAAI,gBAAG9C,EAAH,EAAGA,GAAIH,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,qBAAa6C,UAAWC,IAAEG,cAA1B,UACGlD,EADH,MACYC,EACV,wBACE6C,UAAWC,IAAEI,gBACbC,QAAS,kBAAMP,EAAgB1C,IAFjC,sBAFOA,W,wBC+EjB,IAMiBwC,cAAQ,MANE,SAACC,GAC1B,MAAO,CACLS,aAAc,gBAAErD,EAAF,EAAEA,KAAMC,EAAR,EAAQA,OAAR,OAAoB2C,EAAS9C,EAAW,CAACE,OAAMC,gBAIhD0C,EAxFjB,YAAyC,IAAjBU,EAAgB,EAAhBA,aACtB,EAAwBC,mBAAS,IAAjC,mBAAOtD,EAAP,KAAauD,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOrD,EAAP,KAAeuD,EAAf,KACQzB,EAAa0B,aAAY,SAAAhD,GAAK,OAAIA,KAAlCsB,SAEF2B,EAAStD,cACTuD,EAAWvD,cAEXwD,EAAoB,SAAAC,GACxB,MAAwBA,EAAEC,OAAlB9D,EAAR,EAAQA,KAAM+D,EAAd,EAAcA,MACd,OAAQ/D,GACN,IAAK,OACHuD,EAAQQ,GACR,MACF,IAAK,SACHP,EAAUO,KAuBhB,OACE,uBAAMC,SAhBa,SAAAH,GACnBA,EAAEI,iBAKF,GAHmB,SAAAjE,GAAI,OACrB+B,EAASxB,MAAM0C,KAAI,SAAAiB,GAAO,OAAIA,EAAQlE,QAAM0C,SAAS1C,GAEnDmE,CAAWnE,GACb,OAAOoE,MAAM,GAAD,OAAIpE,EAAJ,4BAEZqD,EAAa,CAAErD,OAAMC,WAEvBsD,EAAQ,IACRC,EAAU,KAIoBV,UAAWC,IAAEsB,WAA3C,UACE,uBAAOlE,GAAIuD,EAAQZ,UAAWC,IAAEuB,iBAAhC,SACE,uBACExB,UAAWC,IAAEwB,iBACbpE,GAAIuD,EACJc,KAAK,OACLxE,KAAK,OACLyE,QAAQ,yHACRC,MAAM,wcAINC,UAAQ,EACRZ,MAAO/D,EACP4E,SAAUhB,MAGd,uBAAOzD,GAAIwD,EAAUb,UAAWC,IAAEuB,iBAAlC,SACE,uBACExB,UAAWC,IAAEwB,iBACbpE,GAAIwD,EACJa,KAAK,MACLxE,KAAK,SACLyE,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRZ,MAAO9D,EACP2E,SAAUhB,MAGd,wBAAQd,UAAWC,IAAE8B,kBAAmBL,KAAK,SAA7C,+B,iBCpDN,IAQe7B,eARS,SAAAlC,GAAK,MAAK,CAChCsD,MAAOtD,EAAMsB,SAASrB,WAGG,SAAAkC,GAAQ,MAAK,CACtCkC,eAAgB,SAACC,GAAD,OAAWnC,EAAStC,EAAayE,EAAMjB,OAAOC,YAGjDpB,EA3Bf,YAA4C,IAA1BoB,EAAyB,EAAzBA,MAAOe,EAAkB,EAAlBA,eACvB,OACE,gCACE,uDACA,uBACEhC,UAAWC,IAAEwB,iBACbC,KAAK,OACLT,MAAOA,EACPa,SAAUE,UCKHE,MAbf,WAEE,OACE,sBAAKlC,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,IACA,0CACA,cAAC,EAAD,IACA,cAAC,EAAD,QCLNmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUvD,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAawD,QAAS,cAAehD,UAAWA,EAAhD,SACE,cAAC,EAAD,UAINiD,SAASC,eAAe,U,kBCf1B1F,EAAOC,QAAU,CAAC,WAAa,iCAAiC,iBAAmB,uCAAuC,iBAAmB,uCAAuC,gBAAkB,sCAAsC,kBAAoB,2C","file":"static/js/main.e8b38c7e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"ContactList_TaskList__Cf-7W\",\"TaskList_item\":\"ContactList_TaskList_item__YuNTi\",\"TaskList_button\":\"ContactList_TaskList_button__3Fwnr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor_input\":\"Filter_TaskEditor_input__6pNn2\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContact = createAction('contact/add', ({name, number}) => ({\r\n    payload: {\r\n        id: uuidv4(),\r\n        name,\r\n        number,\r\n    },\r\n}));\r\nconst deleteContact = createAction('contact/delete');\r\nconst changeFilter = createAction('contact/filter');\r\n\r\nexport { addContact, deleteContact, changeFilter };","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from \"redux\";\r\nimport { addContact, deleteContact, changeFilter } from './contacts-actions';\r\n\r\n\r\nconst contacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst items = createReducer(contacts, {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n})","import { configureStore, getDefaultMiddleware, combineReducers } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\n\r\n\r\nconst middleware = [...getDefaultMiddleware(\r\n    {\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n    logger\r\n];\r\n\r\nconst contactPersistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: persistReducer(contactPersistConfig, contactsReducer)\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { persistor, store };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contacts/contacts-actions';\r\nimport s from './ContactList.module.css';\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n\r\n  return (\r\n    <ul className={s.TaskList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.TaskList_item}>\r\n          {name} : {number}\r\n          <button\r\n            className={s.TaskList_button}\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  onDeleteContact: PropTypes.func,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n};\r\n\r\nconst visibleContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(({name}) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({contacts: {items, filter}}) => ({\r\n  contacts: visibleContacts(items, filter)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(deleteContact(id)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { addContact } from '../../redux/contacts/contacts-actions';\r\nimport s from './ContactsForm.module.css';\r\n\r\nfunction ContactsForm({ onAddContact }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');  \r\n  const { contacts } = useSelector(state => state);\r\n\r\n  const nameId = uuidv4();\r\n  const numberId = uuidv4();\r\n\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const searchName = name =>\r\n      contacts.items.map(contact => contact.name).includes(name);\r\n    \r\n    if (searchName(name)) {\r\n      return alert(`${name} is already in contacts`);\r\n    } else {\r\n      onAddContact({ name, number });\r\n    }\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.TaskEditor}>\r\n      <label id={nameId} className={s.TaskEditor_label}>\r\n        <input\r\n          className={s.TaskEditor_input}\r\n          id={nameId}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв,\r\n            апострофа, тире и пробелов.\r\n            Например Adrian, Jacob Mercer,\r\n            Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleInputChange}\r\n        />\r\n      </label>\r\n      <label id={numberId} className={s.TaskEditor_label}>\r\n        <input\r\n          className={s.TaskEditor_input}\r\n          id={numberId}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handleInputChange}\r\n        />\r\n      </label>\r\n      <button className={s.TaskEditor_button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactsForm.propTypes = {\r\n  onAddContact: PropTypes.func,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAddContact: ({name, number}) => dispatch(addContact({name, number})),\r\n  }\r\n};\r\n\r\n  export default connect(null, mapDispatchToProps)(ContactsForm);\r\n","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div>\r\n      <h3>Find contacts by name</h3>\r\n      <input\r\n        className={s.TaskEditor_input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChangeFilter}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onchangeFilter: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChangeFilter: (event) => dispatch(changeFilter(event.target.value)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)","import './App.css';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport ContactsForm from './components/ContactsForm/ContactsForm';\r\nimport Filter from './components/Filter/Filter';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Phonebook</h1>\r\n      <ContactsForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport {persistor, store} from './redux/store';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={'please wait'} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"ContactsForm_TaskEditor__2iMiv\",\"TaskEditor_label\":\"ContactsForm_TaskEditor_label__1BveE\",\"TaskEditor_input\":\"ContactsForm_TaskEditor_input__2EIIq\",\"TaskEditorinput\":\"ContactsForm_TaskEditorinput__36bnX\",\"TaskEditor_button\":\"ContactsForm_TaskEditor_button__1HIGF\"};"],"sourceRoot":""}